        //public List<IToDoItem> GetTodoList(int userId)
        //{
        //    List<User> users;
        //    string json;
        //    if (isFirst)
        //    {
        //        ToDoManagerClient client = new ToDoManagerClient();
        //        IEnumerable<CustomToDoItem> customItems = client.GetTodoList(userId).Select(u =>
        //            new CustomToDoItem()
        //            {
        //                ToDoId = u.ToDoId,
        //                IsCompleted = u.IsCompleted,
        //                Name = u.Name,
        //                UserId = u.UserId
        //            });

        //        client.Close();

        //        json = File.ReadAllText("ItemsFile.json");
        //        users = new JavaScriptSerializer().Deserialize<List<User>>(json);

        //        User currentUser = users.First(u => u.Id == userId);
        //        currentUser.toDoList.AddRange(customItems.Select(i => new Item()
        //        {
        //            Id = i.ToDoId,
        //            Description = i.Name,
        //            IsComplete = i.IsCompleted
        //        }));

        //        //foreach (CustomToDoItem item in customItems)
        //        //{
        //        //    currentUser.toDoList.Add(new Item()
        //        //    {
        //        //        Id = item.ToDoId,
        //        //        Description = item.Name,
        //        //        IsComplete = item.IsCompleted
        //        //    });
        //        //}

        //        json = new JavaScriptSerializer().Serialize(users);
        //        File.WriteAllText("ItemsFile.json", json);

        //        return customItems.Cast<IToDoItem>().ToList();
        //    }

        //    json = File.ReadAllText("ItemsFile.json");
        //    users = new JavaScriptSerializer().Deserialize<List<User>>(json);
        //    List<CustomToDoItem> itemsList = users.First(u => u.Id == userId).toDoList.Select(u =>
        //        new CustomToDoItem()
        //        {
        //            ToDoId = u.Id,
        //            IsCompleted = u.IsComplete,
        //            Name = u.Description,
        //            UserId = userId
        //        }).ToList();

        //    return (List<IToDoItem>)itemsList.Cast<IToDoItem>();
        //}